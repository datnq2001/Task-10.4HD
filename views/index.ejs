<!-- index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Secure Login with bcrypt + JWT</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<!-- Highlight.js for syntax highlighting -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
<script>hljs.highlightAll();</script>

<style>
        @import url('https://fonts.googleapis.com/css?family=Montserrat:400,800');

        .hero {
            padding: 80px 0;
            text-align: center;
        }

        .section-title {
            margin-top: 80px;
            margin-bottom: 40px;
        }

        .feature-card {
            border: 1px solid #eee;
            border-radius: 12px;
            padding: 24px;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

        .doc-card {
            border-left: 4px solid #c3e265;
            padding: 16px 24px;
            margin-bottom: 16px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        footer {
            margin-top: 80px;
            padding: 40px 0;
            background: #f1f1f1;
            text-align: center;
            font-size: 14px;
        }

        * {
            box-sizing: border-box;
        }

        .auth-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 14px 28px rgba(0,0,0,0.25), 
                        0 10px 10px rgba(0,0,0,0.22);
            position: relative;
            overflow: hidden;
            width: 768px;
            max-width: 100%;
            min-height: 480px;
        }

        .auth-container.right-panel-active .sign-in-panel {
            transform: translateX(100%);
        }

        .auth-container.right-panel-active .sign-up-panel {
            transform: translateX(100%);
            opacity: 1;
            z-index: 5;
            animation: show 0.6s;
        }

        .form-container {
            position: absolute;
            top: 0;
            height: 100%;
            transition: all 0.6s ease-in-out;
        }

        .sign-in-panel {
            left: 0;
            width: 50%;
            z-index: 2;
        }

        .sign-up-panel {
            left: 0;
            width: 50%;
            opacity: 0;
            z-index: 1;
        }

        @keyframes show {
            0%, 49.99% {
                opacity: 0;
                z-index: 1;
            }
            50%, 100% {
                opacity: 1;
                z-index: 5;
            }
        }

        .overlay-container {
            position: absolute;
            top: 0;
            left: 50%;
            width: 50%;
            height: 100%;
            overflow: hidden;
            transition: transform 0.6s ease-in-out;
            z-index: 100;
        }

        .auth-container.right-panel-active .overlay-container {
            transform: translateX(-100%);
        }

        .overlay {
            background: #1f1f1f; 
            background: -webkit-linear-gradient(to right, #1f1f1f, #373737); 
            background: linear-gradient(to right, #1f1f1f, #373737); 
            background-repeat: no-repeat;
            background-size: cover;
            background-position: 0 0;
            color: #FFFFFF;
            position: relative;
            left: -100%;
            height: 100%;
            width: 200%;
            transform: translateX(0);
            transition: transform 0.6s ease-in-out;
        }

        .auth-container.right-panel-active .overlay {
            transform: translateX(50%);
        }

        .overlay-panel {
            position: absolute;
            display: flex;
            gap: 10px;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 40px;
            text-align: center;
            top: 0;
            height: 100%;
            width: 50%;
            transition: transform 0.6s ease-in-out;
        }

        .overlay-left {
            transform: translateX(-20%);
        }

        .auth-container.right-panel-active .overlay-left {
            transform: translateX(0);
        }

        .overlay-right {
            right: 0;
            transform: translateX(0);
        }

        .auth-container.right-panel-active .overlay-right {
            transform: translateX(20%);
        }

        form {
            background-color: #FFFFFF;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 50px;
            height: 100%;
            text-align: center;
        }

        input {
            background-color: #eee;
            border: none;
            padding: 12px 15px;
            margin: 8px 0;
            width: 100%;
        }

        button {
            border-radius: 20px;
            border: 1px solid #1f1f1f;
            background-color: #373737;
            color: #FFFFFF;
            font-size: 12px;
            font-weight: bold;
            padding: 12px 45px;
            letter-spacing: 1px;
            text-transform: uppercase;
            transition: transform 80ms ease-in;
        }

        button:active {
            transform: scale(0.95);
        }

        button:focus {
            outline: none;
        }

        button.ghost {
            background-color: transparent;
            border-color: #FFFFFF;
            margin-top: 30px;
        }

        @media (max-width: 768px) {
            .auth-container {
                display: flex;
                flex-direction: column;
                width: 100%;
                min-height: auto;
                box-shadow: none;
                border-radius: 0;
            }

            .overlay-container {
                display: none; 
            }

            .form-container {
                position: relative;
                width: 100% !important;
                transform: none !important;
                opacity: 1 !important;
                z-index: 1 !important;
                padding: 1rem;
                border-bottom: 1px solid #ddd;
            }

            .sign-in-panel,
            .sign-up-panel {
                display: block;
            }

            .form-container form {
                padding: 20px;
            }

            .form-container h1 {
                font-size: 1.5rem;
                margin-bottom: 10px;
            }

            input {
                font-size: 16px;
            }

            button {
                width: 100%;
                margin-top: 10px;
            }

            .copy-button {
                width: fit-content !important;
            }
        }



        footer.auth-footer {
            background-color: #222;
            color: #fff;
            font-size: 14px;
            bottom: 0;
            left: 0;
            right: 0;
            text-align: center;
            z-index: 999;
        }

        footer.auth-footer p {
            margin: 10px 0;
        }

        footer.auth-footer i {
            color: red;
        }

        footer.auth-footer a {
            color: #3c97bf;
            text-decoration: none;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
        }

        .parallax-section {
            background-image: url('https://images.unsplash.com/photo-1563920443079-783e5c786b83?q=80&w=3464&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');
            height: 100vh;
            background-attachment: fixed;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            margin-bottom: 0;
        }

        .forgot-password {
            display: block;
            margin: 20px 0; 
            color: #555; 
            text-decoration: none; 
            font-size: 14px; 
            font-weight: bold;
            transition: color 0.3s ease; 
        }

        .forgot-password:hover {
            color: #000; 
        }

        .circle-icon {
            background-color: #c3e265;
            color: #000;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 1.3rem;
            transition: all 0.3s ease;
        }

        .special-button-text {
            background-color: #c3e265;
            color: #000;
            font-weight: 700;
            letter-spacing: 2px;
            border-radius: 999px;
            padding: 1.5rem 1.5rem;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .special-button:hover .circle-icon {
            transform: translateX(140%);
            background-color: #060514;
            color: #fff;
            cursor: pointer;
        }

        .special-button:hover .special-button-text {
            padding-left: 4.8rem; 
            cursor: pointer;
        }

        .special-button {
            display: inline-flex;
            align-items: center;
            gap: 1rem;
            text-decoration: none;
            transition: all 0.3s ease;
            cursor: pointer;
            margin-top: 30px;
        }

        .card-image {
            width: 100%; 
            height: 100%; 
            object-fit: cover; 
            object-position: center; 
        }

        .code-block {
            position: relative;
            margin-top: 1rem;
            margin-bottom: 1rem;
            max-width: 100%;
            overflow-x: auto;
            background-color: #1e1e1e; 
            border-radius: 8px;
        }

        .copy-button {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #fff;
            color: #444;
            border: none;
            padding: 6px 12px;
            font-size: 12px;
            border-radius: 4px;
            cursor: pointer;
            opacity: 0.85;
            transition: all 0.3s ease;
            z-index: 10;
        }

        .copy-button:hover {
            background: #c3e265;
            color: #000;
        }

        pre {
            margin: 0;
        }

        pre code {
            display: block;
            width: 100%;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            padding: 1rem;
            border-radius: 8px;
            overflow-x: auto;
            white-space: pre;
            line-height: 1.6;
        }

        pre code {
            overflow-x: auto;
            white-space: pre-wrap; 
        }
    </style>
</head>
<body>
    <header class="container d-flex justify-content-between align-items-center py-3">
        <h4>🔐 AuthDemo</h4>
        <div>
            <% if (user) { %>
            <span class="me-3">👋 Welcome, <strong><%= user.name %></strong></span>
            <form id="logoutForm" method="POST" action="/auth/logout" class="d-inline">
                <button class="btn btn-danger">Logout</button>
            </form>
            <% } else { %>
                <button class="btn btn-outline-dark me-2" onclick="scrollToSection('auth', 150)">Login</button>
                <button class="btn btn-dark" onclick="scrollToSection('auth', 150)">Sign Up</button>
            <% } %>
        </div>
    </header>

    <main class="container">
        <!-- Welcome Section -->
        <% if (user) { %>
            <div id="welcome" class="text-center bg-dark text-white p-4 rounded">
            <h5>Welcome, <%= user.name %>!</h5>
            <p>You are logged in now.</p>
            </div>
        <% } %>

        <!-- Hero -->
        <section class="hero">
            <h1>Secure Login with bcrypt + JWT</h1>
            <p class="lead">A robust authentication system securing your login process.</p>
            <a href="javascript:void(0);" class="special-button" onclick="scrollToSection('auth', 150)">
                <div class="circle-icon">
                  <i class="bi bi-arrow-up-right"></i>
                </div>
                <div class="special-button-text">TRY THE DEMO</div>
            </a>
        </section>

        <!-- Parallax Section -->
        <section class="parallax-section d-flex justify-content-center align-items-center">
            <div class="text-center text-white">
                <h1 class="display-5 fw-bold">Your Data, Your Control</h1>
                <p class="lead">Experience smooth and secure authentication with modern design.</p>
            </div>
        </section>

        <!-- Demo Image or Video Placeholder -->
        <section class="text-center">
            <div class="bg-light p-5 rounded">Experience the security of your data with our advanced solutions.</div>
        </section>

        <!-- Login / Sign Up Section -->
        <% if (!user) { %>
            <h2 class="section-title text-center fw-bold">Product</h2>
            <section id="auth" class="my-5 d-flex justify-content-center">
                <div class="auth-container" id="authContainer">
                    <div class="form-container sign-up-panel">
                        <form id="signupForm">
                        <h1>Create Account</h1>
                        <span style="display: block; margin: 8px 0 15px; ">Use your email for registration</span>
                        <input type="text" name="name" placeholder="Name" required />
                        <input type="email" name="email" placeholder="Email" required />
                        <input type="password" name="password" placeholder="Password" required />
                        <button type="submit" style="margin-top: 30px;">Sign Up</button>
                        </form>
                    </div>
                    <div class="form-container sign-in-panel">
                        <form id="loginForm">
                        <h1>Sign in</h1>
                        <input type="email" name="email" placeholder="Email" required />
                        <input type="password" name="password" placeholder="Password" required />
                        <a href="#" class="forgot-password">Forgot your password?</a>
                        <button type="submit">Sign In</button>
                        </form>
                    </div>
                    <div class="overlay-container">
                        <div class="overlay">
                        <div class="overlay-panel overlay-left">
                            <h1>Welcome Back!</h1>
                            <p>To keep connected with us please login with your personal info</p>
                            <button class="ghost" id="triggerSignIn">Sign In</button>
                        </div>
                        <div class="overlay-panel overlay-right">
                            <h1>Hello, Friend!</h1>
                            <p>Enter your personal details and start journey with us</p>
                            <button class="ghost" id="triggerSignUp">Sign Up</button>
                        </div>
                        </div>
                    </div>
                </div>
            </section>
        <% } %>
        <!-- End Login / Sign Up Section -->
        
        
        <!-- Features -->
        <section id="features" class="my-5">
            <h2 class="section-title text-center fw-bold">Features</h2>
            <div class="row g-4 mt-4" id="featuresContainer"></div>

        </section>
  

        <!-- Docs -->
        <section id="how-it-works">
            <h2 class="section-title">How It Works</h2>
            <p>This section explains how secure authentication is implemented using bcrypt, JWT, and httpOnly cookies.</p>
            
            <div class="doc-card">
                <h6>1. Password Hashing with bcrypt</h6>
                <p>Passwords are hashed using <code>bcrypt.hash()</code> before being saved to the database. This protects against plain text leaks.</p>
                <div class="code-block">
                    <button class="copy-button" onclick="copyCode(this)">Copy</button>
                    <pre><code class="language-javascript">
                const hashed = await bcrypt.hash(password, 10);
                db.run('INSERT INTO users (name, email, password) VALUES (?, ?, ?)', [name, email, hashed]);
                    </code></pre>
                </div>
            </div>
            
            <div class="doc-card">
                <h6>2. Login with JWT</h6>
                <p>After successful login, a JWT is generated using <code>jwt.sign()</code> and stored in a secure <strong>httpOnly cookie</strong>.</p>
                <div class="code-block">
                    <button class="copy-button" onclick="copyCode(this)">Copy</button>
                    <pre><code class="language-javascript">
                const token = jwt.sign({ name: user.name, email: user.email }, SECRET, { expiresIn: '1h' });
                res.cookie('token', token, { httpOnly: true });
                    </code></pre>
                </div>
            </div>
            
            <div class="doc-card">
                <h6>3. Middleware Authentication</h6>
                <p>Protected routes call a <code>requireAuth</code> middleware which verifies the JWT from cookies. If invalid, access is denied.</p>
                <div class="code-block">
                    <button class="copy-button" onclick="copyCode(this)">Copy</button>
                    <pre><code class="language-javascript">
                function requireAuth(req, res, next) {
                const token = req.cookies.token;
                if (!token) return res.status(401).json({ message: 'Unauthorized' });
                
                jwt.verify(token, SECRET, (err, user) => {
                    if (err) return res.status(403).json({ message: 'Forbidden' });
                    req.user = user;
                    next();
                });
                }
                    </code></pre>
                </div>
            </div>
            
            <div class="doc-card">
                <h6>4. Logout</h6>
                <p>To logout, the JWT cookie is cleared from the browser using <code>res.clearCookie()</code>.</p>
                <div class="code-block">
                    <button class="copy-button" onclick="copyCode(this)">Copy</button>
                    <pre><code class="language-javascript">
                res.clearCookie('token');
                res.redirect('/');
                    </code></pre>
                </div>
            </div>
            
            <div class="doc-card">
                <h6>Why httpOnly Cookies?</h6>
                <p>Using the <code>httpOnly</code> flag prevents JavaScript from accessing authentication tokens, making your app safer against XSS attacks.</p>
            </div>
        </section>
          
        <!-- Tutorial Video Section -->
        <section id="tutorial" class="my-5">
            <div class="container">
                <h2 class="section-title text-center fw-bold mb-4">Tutorial Video</h2>
            
                <!-- Responsive Video Embed -->
                <div class="ratio ratio-16x9 rounded shadow mb-4">
                    <iframe 
                    src="https://player.vimeo.com/video/1087649250?h=03c4a31456&amp;title=0&amp;byline=0&amp;portrait=0&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479" 
                    title="Authentication Tutorial"
                    allowfullscreen
                    loading="lazy">
                    </iframe>
                </div>
            
                <!-- Description -->
                <div class="text-center">
                    <h5 class="fw-semibold">Secure Login with bcrypt, JWT and HttpOnly Cookies</h5>
                    <p class="text-muted mx-auto" style="max-width: 720px;">
                    This video walks through the core features of the project: password hashing using bcrypt,
                    JWT generation and verification, httpOnly cookie storage, route protection using middleware,
                    and logout handling. You’ll also see how the UI reacts to login state with smooth transitions.
                    </p>
                </div>
            </div>
        </section>
  
          
    </main>

    <footer class="auth-footer">
        <p>GitHub | Panopto video | Acknowledgement | Contact: s225289949@deakin.edu.au</p>
    </footer>

    <!-- Alert Box -->
    <div id="alertBox" class="alert alert-dismissible fade show position-fixed" style="top: 20px; right: -400px; min-width: 300px; z-index: 9999; transition: right 0.6s ease-in-out;">
        <div class="d-flex align-items-center">
            <div id="alertIcon" class="me-2 fs-4"></div>
            <div>
                <strong id="alertTitle">Title</strong>
                <div id="alertMessage" class="small"></div>
            </div>
        </div>
    </div>
      
    <!-- Scripts -->
    <!-- Handle the Login/SignUp Modal -->
    <script>
        const container = document.getElementById('authContainer');
        document.getElementById('triggerSignUp').addEventListener('click', () => {
            container.classList.add('right-panel-active');
        });
        document.getElementById('triggerSignIn').addEventListener('click', () => {
            container.classList.remove('right-panel-active');
        });
    </script>

    <!-- Handle Login/Signup Form -->
    <script>
        document.getElementById('signupForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const form = e.target;
            const res = await fetch('/auth/register', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                name: form.name.value,
                email: form.email.value,
                password: form.password.value
                })
            });
            const data = await res.json();
            showAlert({
                type: res.ok ? 'success' : 'danger',
                title: res.ok ? 'Sign Up Successful' : 'Sign Up Failed',
                message: data.message || 'Something went wrong.'
            });
            if (res.ok) {
                setTimeout(() => {
                    location.reload();
                }, 2000); 
            }
        });
    
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const form = e.target;
            const res = await fetch('/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                email: form.email.value,
                password: form.password.value
                })
            });
            const data = await res.json();
            showAlert({
                type: res.ok ? 'success' : 'danger',
                title: res.ok ? 'Login Successful' : 'Login Failed',
                message: data.message || 'Something went wrong.'
            });
            if (res.ok) {
                setTimeout(() => {
                    location.reload();
                }, 2000); 
            }
        });
    </script>

    <!-- Handle the Alert -->
    <script>
        function showAlert({ type = 'success', title = '', message = '' }) {
        const alertBox = document.getElementById('alertBox');
        const alertTitle = document.getElementById('alertTitle');
        const alertMessage = document.getElementById('alertMessage');
        const alertIcon = document.getElementById('alertIcon');
    
        // Reset classes
        alertBox.classList.remove('alert-success', 'alert-danger');
        alertIcon.innerHTML = '';
    
        if (type === 'success') {
            alertBox.classList.add('alert-success');
            alertIcon.innerHTML = '✅';
        } else {
            alertBox.classList.add('alert-danger');
            alertIcon.innerHTML = '❌';
        }
    
        alertTitle.textContent = title;
        alertMessage.textContent = message;
    
        // Slide in
        alertBox.style.right = '20px';
    
        // Auto hide after 4s
        setTimeout(() => {
            alertBox.style.right = '-400px';
        }, 4000);
        }
    </script>

    <!-- Smooth Scroll Function -->
    <script>
        function scrollToSection(sectionId, offset = 0) {
            const section = document.getElementById(sectionId);
            if (section) {
                const topPosition = section.getBoundingClientRect().top + window.scrollY - offset;
                window.scrollTo({
                    top: topPosition,
                    behavior: 'smooth'
                });
            }
        }
    </script>

    <!-- Fetch Features Data -->
    <script>
        fetch('/data/features.json')
        .then(res => res.json())
        .then(features => {
            const container = document.getElementById('featuresContainer');
            features.forEach(f => {
            const col = document.createElement('div');
            col.className = 'col-md-4';
            col.innerHTML = `
                <div class="card border rounded shadow-sm">
                <div class="position-relative bg-light" style="height: 270px;">
                    <span class="badge bg-secondary position-absolute top-0 start-0 m-2">${f.badge}</span>
                    <div class="h-100 d-flex justify-content-center align-items-center">
                    <img src="${f.image}" alt="${f.alt}" class="img-fluid card-image">
                    </div>
                </div>
                <div class="card-body">
                    <h6 class="card-subtitle mb-1 text-muted">${f.subtitle}</h6>
                    <h5 class="card-title fw-bold mb-0">${f.title}</h5>
                </div>
                </div>`;
            container.appendChild(col);
            });
        });
    </script>

    <script>
        function copyCode(button) {
            const code = button.nextElementSibling.innerText;
            navigator.clipboard.writeText(code).then(() => {
                button.innerText = 'Copied!';
                setTimeout(() => button.innerText = 'Copy', 2000);
            });
        }
    </script>
        
    
  
</body>
</html>
